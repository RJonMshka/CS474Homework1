[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(SetTheoryDSLTest, org.scalatest.tools.Framework$$anon$1@19db5e88, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(ClassesAndInheritanceDSLTest, org.scalatest.tools.Framework$$anon$1@19db5e88, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(InterfaceAndAbstractClassDSLTest, org.scalatest.tools.Framework$$anon$1@19db5e88, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSetTheoryDSLTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSet Theory DSL - SetPlayground[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should create a variable an insert a value into it[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should create a set and insert a string value in it[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should create a set and insert multiple values in it[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should create a macro and store it in a variable[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should create a macro and evaluate that macro later to add value to a set[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should insert a value into an existing set[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should insert multiple values and/or variables into an existing set[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should delete a value from an existing set[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not delete a value from an existing set if that value is not there[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should delete multiple values and/or variables from an existing set[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should create a named scope and insert a variable of outer scope to the set *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  java.util.NoSuchElementException: key not found: set_t11[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.MapOps.default(Map.scala:274)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.MapOps.default$(Map.scala:273)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.AbstractMap.default(Map.scala:405)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.mutable.HashMap.apply(HashMap.scala:425)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at SetTheoryDSL$.SetTheoryDSL$$$getVariable(SetTheoryDSL.scala:577)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at SetTheoryDSL$SetExpression.eval(SetTheoryDSL.scala:1089)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at SetTheoryDSL$SetExpression.eval(SetTheoryDSL.scala:1167)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at SetTheoryDSL$SetExpression.eval$$anonfun$1(SetTheoryDSL.scala:1114)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should create nested scopes and insert a variable of outer scope to the set *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  java.util.NoSuchElementException: key not found: set_t13[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.MapOps.default(Map.scala:274)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.MapOps.default$(Map.scala:273)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.AbstractMap.default(Map.scala:405)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.mutable.HashMap.apply(HashMap.scala:425)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at SetTheoryDSL$.SetTheoryDSL$$$getVariable(SetTheoryDSL.scala:577)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at SetTheoryDSL$SetExpression.eval(SetTheoryDSL.scala:1089)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at SetTheoryDSL$SetExpression.eval(SetTheoryDSL.scala:1167)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at SetTheoryDSL$SetExpression.eval$$anonfun$3(SetTheoryDSL.scala:1134)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should create scopes whose bindings can be accessed again using the same names[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should evaluate the Union of two sets[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should evaluate the Intersection of two sets[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should evaluate the Set Difference of two sets[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should evaluate the Symmetric Difference of two sets[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should evaluate the Cartesian Product of two sets[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mClassesAndInheritanceDSLTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTesting Classes, Objects and Inheritance in DSL SetTheory[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  Class Definition, fields, and methods[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - Should Define a class and create an object from it[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - Should Invoke one public method of an object[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - Should change a public of an object[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - Should invoke another one method from another one[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - Should throw an error when trying to access a protected field[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - Should throw an error when trying to access a private field[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - Should throw an error when trying to access a default field[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - Should create another class by extending other - inheriting its accessible fields[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should prove that public fields are also inherited[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should prove that protected fields are also inherited[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an error if superClass's private field is accessed - as private fields are not inherited[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an error if superClass's default field is accessed - as default fields are not inherited[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should inherit public methods of its parent class and invoke those methods if not overridden in child class's body[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should perform dynamic dispatch of method from super class's method[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should also inherit protected methods of its parent class[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw error if try to access private methods of its parent[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw error if try to access default methods of its parent[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw error if try to directly invoke its or its parent's protected methods[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should create an inner class and access it using enclosing class to create object[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should create an inner class and access it using enclosing class's instance[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mInterfaceAndAbstractClassDSLTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTesting Interfaces and Abstract Classes in DSL SetTheory[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  Interface declaration, implementation and inheritance[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an Exception if one interface tries to implement another interface[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an Exception if an attempt to declare an interface with the name of an existing interface in the same scope[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an Exception if one interface extends an another interface and tries to create a method with same name which is already declared in super interface[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an Exception if 'Extends' expression is present more than once in interface body[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  Classes, Abstract Classes, Interfaces and their relations including implementation and inheritance[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an Exception if a non-abstract class tries to implement an interface but does not provide any implementation for interface methods[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an Exception if an abstract class is declared without any abstract method[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an Exception if 'Implements' expression comes more than once in a class declaration[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an Exception if same interface is implemented more than once in one expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an Exception if non-abstract class declares an abstract method[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should implement an interface and provide behavior for the abstract method[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should invoke a default method of an interface[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should invoke a default method from an abstract method of an interface which is implemented by the class[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should undergo class and interface composition, where a field of interface are inherited by an abstract class and then by concrete class, also implmenting the super interfaces[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an Exception if any interface tries to extend itself[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an Exception if any abstract class tries to extend itself[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should throw an Exception if any concrete class tries to extend itself[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should not inherit any private access method of an interface[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should not inherit any default access method of an interface[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  Member classes and Interface Access[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should only implement an inner interface of another interface[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should only implement an inner interface of another class[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m  - should only implement an inner interface of another object[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 1 second, 23 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 59[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 3, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 57, failed 2, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 2 TESTS FAILED ***[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mPassed tests:[0m
[0m[[0m[0mdebug[0m] [0m[0m	ClassesAndInheritanceDSLTest[0m
[0m[[0m[0mdebug[0m] [0m[0m	InterfaceAndAbstractClassDSLTest[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	SetTheoryDSLTest[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
