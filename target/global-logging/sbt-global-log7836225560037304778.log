[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\RAJAT~1.LAP\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\RAJAT~1.LAP\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_301)
[debug]       Load.loadUnit: plugins took 148.5628ms
[debug]       Load.loadUnit: defsScala took 0.5094ms
[debug] [Loading] Scanning directory C:\Users\Rajat .LAPTOP-DNL00KK8\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Rajat .LAPTOP-DNL00KK8\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.627 ms
[debug]           Load.resolveProject(global-plugins) took 65.7736ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Rajat .LAPTOP-DNL00KK8\.sbt\1.0\plugins, plugins: List(<none>))) took 122.7664ms
[debug] [Loading] Done in C:\Users\Rajat .LAPTOP-DNL00KK8\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 155.4503ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3034ms
[debug]     Load.loadUnit(file:/C:/Users/Rajat%20.LAPTOP-DNL00KK8/.sbt/1.0/plugins/, ...) took 316.3644ms
[debug]   Load.apply: load took 529.5759ms
[debug]   Load.apply: resolveProjects took 6.4451ms
[debug]   Load.apply: finalTransforms took 81.3203ms
[debug]   Load.apply: config.delegates took 12.8809ms
[debug]   Load.apply: Def.make(settings)... took 598.4094ms
[debug]   Load.apply: structureIndex took 161.4003ms
[debug]   Load.apply: mkStreams took 2.7249ms
[info] loading global plugins from C:\Users\Rajat .LAPTOP-DNL00KK8\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4130.8893ms
[debug]           Load.loadUnit: plugins took 49.3796ms
[debug]           Load.loadUnit: defsScala took 0.0224ms
[debug] [Loading] Scanning directory F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1\project
[debug]             Load.loadUnit: mkEval took 11.2974ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.1901 ms
[info] loading settings for project cs474homework1-build from idea2.sbt ...
[debug]               Load.resolveProject(cs474homework1-build) took 4.4295ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cs474homework1-build, base: F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1\project, plugins: List(<none>))) took 8.4648ms
[debug] [Loading] Done in F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1\project, returning: (cs474homework1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 274.0322ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.0467ms
[debug]         Load.loadUnit(file:/F:/UIC%20Study/CS%20474%20-%20OOLE/Code%20trials%20Projects/CS474Homework1/project/, ...) took 330.1667ms
[debug]       Load.apply: load took 332.1735ms
[debug]       Load.apply: resolveProjects took 0.0882ms
[debug]       Load.apply: finalTransforms took 15.6143ms
[debug]       Load.apply: config.delegates took 0.6304ms
[debug]       Load.apply: Def.make(settings)... took 129.8864ms
[debug]       Load.apply: structureIndex took 43.1045ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6258.4379ms
[debug]     Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1
[debug]       Load.loadUnit: mkEval took 0.6988ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.3498 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 42.7972ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1, plugins: List(<none>))) took 49.5875ms
[debug] [Loading] Done in F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4501.1785ms
[debug]     Load.loadUnit: cleanEvalClasses took 13.1063ms
[debug]   Load.loadUnit(file:/F:/UIC%20Study/CS%20474%20-%20OOLE/Code%20trials%20Projects/CS474Homework1/, ...) took 10773.5555ms
[debug] Load.apply: load took 10775.372ms
[debug] Load.apply: resolveProjects took 0.1415ms
[debug] Load.apply: finalTransforms took 30.9082ms
[debug] Load.apply: config.delegates took 0.3852ms
[debug] Load.apply: Def.make(settings)... took 119.5961ms
[debug] Load.apply: structureIndex took 29.8615ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to CS474Homework1 (in build file:/F:/UIC%20Study/CS%20474%20-%20OOLE/Code%20trials%20Projects/CS474Homework1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64334 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64334, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to CS474Homework1 (in build file:/F:/UIC%20Study/CS%20474%20-%20OOLE/Code%20trials%20Projects/CS474Homework1/)
[debug] > Exec(idea-shell, None, None)
