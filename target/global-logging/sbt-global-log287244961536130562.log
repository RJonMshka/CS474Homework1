[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\RAJAT~1.LAP\AppData\Local\Temp\idea2.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\RAJAT~1.LAP\AppData\Local\Temp\idea2.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_301)
[debug]       Load.loadUnit: plugins took 138.3734ms
[debug]       Load.loadUnit: defsScala took 0.323ms
[debug] [Loading] Scanning directory C:\Users\Rajat .LAPTOP-DNL00KK8\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Rajat .LAPTOP-DNL00KK8\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.2879 ms
[debug]           Load.resolveProject(global-plugins) took 56.3667ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Rajat .LAPTOP-DNL00KK8\.sbt\1.0\plugins, plugins: List(<none>))) took 112.6144ms
[debug] [Loading] Done in C:\Users\Rajat .LAPTOP-DNL00KK8\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 138.479ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3419ms
[debug]     Load.loadUnit(file:/C:/Users/Rajat%20.LAPTOP-DNL00KK8/.sbt/1.0/plugins/, ...) took 286.3748ms
[debug]   Load.apply: load took 479.6676ms
[debug]   Load.apply: resolveProjects took 6.9041ms
[debug]   Load.apply: finalTransforms took 96.798ms
[debug]   Load.apply: config.delegates took 20.8295ms
[debug]   Load.apply: Def.make(settings)... took 656.5823ms
[debug]   Load.apply: structureIndex took 199.1489ms
[debug]   Load.apply: mkStreams took 3.0968ms
[info] loading global plugins from C:\Users\Rajat .LAPTOP-DNL00KK8\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4528.6984ms
[debug]           Load.loadUnit: plugins took 50.5059ms
[debug]           Load.loadUnit: defsScala took 0.0046ms
[debug] [Loading] Scanning directory F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1\project
[debug]             Load.loadUnit: mkEval took 12.3817ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.2222 ms
[info] loading settings for project cs474homework1-build from idea2.sbt ...
[debug]               Load.resolveProject(cs474homework1-build) took 18.1867ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cs474homework1-build, base: F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1\project, plugins: List(<none>))) took 22.3445ms
[debug] [Loading] Done in F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1\project, returning: (cs474homework1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3722.9702ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.5478ms
[debug]         Load.loadUnit(file:/F:/UIC%20Study/CS%20474%20-%20OOLE/Code%20trials%20Projects/CS474Homework1/project/, ...) took 3782.5214ms
[debug]       Load.apply: load took 3784.6773ms
[debug]       Load.apply: resolveProjects took 0.1903ms
[debug]       Load.apply: finalTransforms took 18.1696ms
[debug]       Load.apply: config.delegates took 1.134ms
[debug]       Load.apply: Def.make(settings)... took 127.9857ms
[debug]       Load.apply: structureIndex took 49.3869ms
[debug]       Load.apply: mkStreams took 0.0042ms
[info] loading project definition from F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9581.0988ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1
[debug]       Load.loadUnit: mkEval took 0.4396ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.3171 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 55.3949ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1, plugins: List(<none>))) took 62.3275ms
[debug] [Loading] Done in F:\UIC Study\CS 474 - OOLE\Code trials Projects\CS474Homework1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2759.9237ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.95ms
[debug]   Load.loadUnit(file:/F:/UIC%20Study/CS%20474%20-%20OOLE/Code%20trials%20Projects/CS474Homework1/, ...) took 12356.9141ms
[debug] Load.apply: load took 12359.2593ms
[debug] Load.apply: resolveProjects took 0.266ms
[debug] Load.apply: finalTransforms took 78.8895ms
[debug] Load.apply: config.delegates took 0.5303ms
[debug] Load.apply: Def.make(settings)... took 147.448ms
[debug] Load.apply: structureIndex took 33.4538ms
[debug] Load.apply: mkStreams took 0.0039ms
[info] set current project to CS474Homework1 (in build file:/F:/UIC%20Study/CS%20474%20-%20OOLE/Code%20trials%20Projects/CS474Homework1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51694 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51694, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to CS474Homework1 (in build file:/F:/UIC%20Study/CS%20474%20-%20OOLE/Code%20trials%20Projects/CS474Homework1/)
[debug] > Exec(idea-shell, None, None)
